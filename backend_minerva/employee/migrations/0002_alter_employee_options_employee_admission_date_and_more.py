# Generated by Django 5.2 on 2025-08-28 17:38

import django.core.validators
import django.db.models.deletion
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('budgetline', '0002_budgetlineversion'),
        ('employee', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AlterModelOptions(
            name='employee',
            options={'ordering': ['full_name'], 'verbose_name': 'Funcionário', 'verbose_name_plural': 'Funcionários'},
        ),
        migrations.AddField(
            model_name='employee',
            name='admission_date',
            field=models.DateField(blank=True, null=True, verbose_name='Data de admissão'),
        ),
        migrations.AddField(
            model_name='employee',
            name='bank_account',
            field=models.CharField(blank=True, max_length=20, null=True, verbose_name='Conta'),
        ),
        migrations.AddField(
            model_name='employee',
            name='bank_agency',
            field=models.CharField(blank=True, max_length=10, null=True, verbose_name='Agência'),
        ),
        migrations.AddField(
            model_name='employee',
            name='bank_name',
            field=models.CharField(blank=True, max_length=100, null=True, verbose_name='Banco'),
        ),
        migrations.AddField(
            model_name='employee',
            name='base_salary',
            field=models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))], verbose_name='Salário Base'),
        ),
        migrations.AddField(
            model_name='employee',
            name='birth_date',
            field=models.DateField(blank=True, null=True, verbose_name='Data de nascimento'),
        ),
        migrations.AddField(
            model_name='employee',
            name='city',
            field=models.CharField(blank=True, max_length=100, null=True, verbose_name='Cidade'),
        ),
        migrations.AddField(
            model_name='employee',
            name='department',
            field=models.CharField(blank=True, max_length=100, null=True, verbose_name='Departamento'),
        ),
        migrations.AddField(
            model_name='employee',
            name='employee_id',
            field=models.CharField(blank=True, max_length=20, null=True, unique=True, verbose_name='Matrícula'),
        ),
        migrations.AddField(
            model_name='employee',
            name='phone',
            field=models.CharField(blank=True, max_length=15, null=True, validators=[django.core.validators.RegexValidator(message='Telefone deve estar no formato (XX) XXXXX-XXXX ou (XX) XXXX-XXXX', regex='^\\(\\d{2}\\) \\d{4,5}-\\d{4}$')], verbose_name='Telefone'),
        ),
        migrations.AddField(
            model_name='employee',
            name='position',
            field=models.CharField(blank=True, max_length=100, null=True, verbose_name='Cargo'),
        ),
        migrations.AddField(
            model_name='employee',
            name='postal_code',
            field=models.CharField(blank=True, max_length=9, null=True, verbose_name='CEP'),
        ),
        migrations.AddField(
            model_name='employee',
            name='state',
            field=models.CharField(blank=True, max_length=2, null=True, verbose_name='Estado'),
        ),
        migrations.AddField(
            model_name='employee',
            name='street',
            field=models.CharField(blank=True, max_length=255, null=True, verbose_name='Endereço'),
        ),
        migrations.AlterField(
            model_name='employee',
            name='cpf',
            field=models.CharField(max_length=14, unique=True, validators=[django.core.validators.RegexValidator(message='CPF deve estar no formato XXX.XXX.XXX-XX', regex='^\\d{3}\\.\\d{3}\\.\\d{3}-\\d{2}$')], verbose_name='CPF'),
        ),
        migrations.AlterField(
            model_name='employee',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, verbose_name='Criado em'),
        ),
        migrations.AlterField(
            model_name='employee',
            name='created_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='employees_created', to=settings.AUTH_USER_MODEL, verbose_name='Criado por'),
        ),
        migrations.AlterField(
            model_name='employee',
            name='status',
            field=models.CharField(choices=[('ATIVO', 'Ativo'), ('INATIVO', 'Inativo'), ('FERIAS', 'Férias'), ('AFASTADO', 'Afastado')], default='ATIVO', max_length=10, verbose_name='Status'),
        ),
        migrations.AlterField(
            model_name='employee',
            name='updated_at',
            field=models.DateTimeField(auto_now=True, verbose_name='Atualizado em'),
        ),
        migrations.AlterField(
            model_name='employee',
            name='updated_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='employees_updated', to=settings.AUTH_USER_MODEL, verbose_name='Atualizado por'),
        ),
        migrations.CreateModel(
            name='EmployeeAid',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('GRADUACAO', 'Graduação'), ('POS_GRADUACAO', 'Pós-Graduação'), ('AUXILIO_CRECHE_ESCOLA', 'Auxílio Creche Escola'), ('LINGUA_ESTRANGEIRA', 'Língua Estrangeira'), ('CAPACITACAO_TECNICA', 'Capacitação Técnica'), ('AUXILIO_ALIMENTACAO', 'Auxílio Alimentação'), ('AUXILIO_TRANSPORTE', 'Auxílio Transporte'), ('PLANO_SAUDE', 'Plano de Saúde'), ('OUTROS', 'Outros')], max_length=25, verbose_name='Tipo de Auxílio')),
                ('description', models.CharField(blank=True, max_length=255, null=True, verbose_name='Descrição')),
                ('total_amount', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))], verbose_name='Valor Total')),
                ('monthly_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))], verbose_name='Valor Mensal')),
                ('start_date', models.DateField(verbose_name='Data de Início')),
                ('end_date', models.DateField(blank=True, null=True, verbose_name='Data de Término')),
                ('payment_frequency', models.CharField(choices=[('MENSAL', 'Mensal'), ('TRIMESTRAL', 'Trimestral'), ('SEMESTRAL', 'Semestral'), ('ANUAL', 'Anual'), ('PAGAMENTO_UNICO', 'Pagamento Único')], default='MENSAL', max_length=15, verbose_name='Frequência de Pagamento')),
                ('installment_count', models.PositiveIntegerField(blank=True, null=True, verbose_name='Número de Parcelas')),
                ('institution_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Nome da Instituição')),
                ('course_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Nome do Curso')),
                ('status', models.CharField(choices=[('AGUARDANDO', 'Aguardando Início'), ('ATIVO', 'Ativo'), ('CONCLUIDO', 'Concluído'), ('CANCELADO', 'Cancelado'), ('SUSPENSO', 'Suspenso')], default='AGUARDANDO', max_length=12, verbose_name='Status')),
                ('notes', models.TextField(blank=True, verbose_name='Observações')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Criado em')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Atualizado em')),
                ('budget_line', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='employee_aids', to='budgetline.budgetline', verbose_name='Linha Orçamentária')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='employee_aids_created', to=settings.AUTH_USER_MODEL, verbose_name='Criado por')),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='aids', to='employee.employee', verbose_name='Funcionário')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='employee_aids_updated', to=settings.AUTH_USER_MODEL, verbose_name='Atualizado por')),
            ],
            options={
                'verbose_name': 'Auxílio de Funcionário',
                'verbose_name_plural': 'Auxílios de Funcionários',
                'ordering': ['-start_date', 'employee__full_name'],
            },
        ),
        migrations.CreateModel(
            name='EmployeeAidPayment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('payment_number', models.PositiveIntegerField(verbose_name='Número do Pagamento')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))], verbose_name='Valor')),
                ('due_date', models.DateField(verbose_name='Data de Vencimento')),
                ('payment_date', models.DateField(blank=True, null=True, verbose_name='Data de Pagamento')),
                ('status', models.CharField(choices=[('PENDENTE', 'Pendente'), ('PROCESSADO', 'Processado'), ('PAGO', 'Pago'), ('CANCELADO', 'Cancelado')], default='PENDENTE', max_length=12, verbose_name='Status')),
                ('notes', models.TextField(blank=True, verbose_name='Observações')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Criado em')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Atualizado em')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='aid_payments_created', to=settings.AUTH_USER_MODEL, verbose_name='Criado por')),
                ('employee_aid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payments', to='employee.employeeaid', verbose_name='Auxílio')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='aid_payments_updated', to=settings.AUTH_USER_MODEL, verbose_name='Atualizado por')),
            ],
            options={
                'verbose_name': 'Pagamento de Auxílio',
                'verbose_name_plural': 'Pagamentos de Auxílios',
                'ordering': ['employee_aid', 'payment_number'],
                'unique_together': {('employee_aid', 'payment_number')},
            },
        ),
        migrations.CreateModel(
            name='EmployeeContract',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('contract_protocol', models.CharField(max_length=7, verbose_name='Protocolo do Contrato')),
                ('role', models.CharField(choices=[('FISCAL_PRINCIPAL', 'Fiscal Principal'), ('FISCAL_SUBSTITUTO', 'Fiscal Substituto')], max_length=20, verbose_name='Função no Contrato')),
                ('start_date', models.DateField(blank=True, null=True, verbose_name='Data de Início')),
                ('end_date', models.DateField(blank=True, null=True, verbose_name='Data de Término')),
                ('notes', models.TextField(blank=True, verbose_name='Observações')),
                ('status', models.CharField(choices=[('ATIVO', 'Ativo'), ('INATIVO', 'Inativo')], default='ATIVO', max_length=7, verbose_name='Status')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Criado em')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Atualizado em')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='employee_contracts_created', to=settings.AUTH_USER_MODEL, verbose_name='Criado por')),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='contract_roles', to='employee.employee', verbose_name='Funcionário')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='employee_contracts_updated', to=settings.AUTH_USER_MODEL, verbose_name='Atualizado por')),
            ],
            options={
                'verbose_name': 'Funcionário Contrato',
                'verbose_name_plural': 'Funcionários Contratos',
                'ordering': ['-created_at'],
                'unique_together': {('contract_protocol', 'role')},
            },
        ),
    ]
